import java.time.*
Date now = new Date()
def curr_time = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')

manifest {
    name = 'test'
    homePage = 'test'
    description = 'test'
    mainScript = 'main.nf'
    nextflowVersion = '>=19.09.0-edge'
    version = '1.0.0'
}

params {
    patients_inventory = 'data/inventory/inventory_patients_tcga.csv'
    analysis_inventory = 'data/inventory/inventory_analysis_tcga_short.csv'
    blacklist_inventory = 'data/inventory/inventory_blacklist_tcga.csv' //optional 
    // In order to do analysis without black & white lists regions
    // blacklist_inventory = ''

    assets_dir = 'data/assets/'
    target_genome_version = 'hg19'
    target_genome_path = 'data/assets/reference_genome/Homo_sapiens_assembly19.fasta'
    // optional, but required then filtering by local mutation rate is
    // requested (see bin_len below)
    target_genome_chr_len = 'data/assets/reference_genome/Homo_sapiens_assembly19.chrom.sizes'
    chain = 'data/assets/reference_genome/hg38ToHg19.over.chain'

    min_depth = 30
    min_tumor_vac = 10
    min_tumor_vaf = 5
    max_germline_vaf = 1
    max_germline_vac = 5
    max_n_vars = 90000

    ignore_strand = 'T'
    min_reg_len = 5

    // optional
    gene_name_synonyms = 'data/assets/gene_names_synonyms/hgnc_complete_set_2022-07-01_proc.csv'
    // optional, set it to -1 to switch off filtering based on local mutation rate
    bin_len = 50000 
    // optional, set it to 'F' to switch off filtering based on synonymous mutation rate (CDS only)
    calc_synonymous = 'T'
    cdsAcceptedClass = 'Frame_Shift_Del Frame_Shift_Ins In_Frame_Del In_Frame_Ins Missense_Mutation Nonsense_Mutation Silent Translation_Start_Site Nonstop_Mutation De_novo_Start_InFrame De_novo_Start_OutOfFrame Unknown'
    ncAcceptedClass = "3primeUTR 3primeFlank 5primeUTR 5primeFlank IGR Intron RNA Targeted_Region Splice_Site Unknown"
    // optional, set to '' to not use
    varanno_conversion_table = 'data/assets/variantAnnotation_to_annovar_conversion.txt' 
    annotation_failed_code = 'Unknown'

    output = 'TEST/'

    timestamp = now.format("yyyyMMdd-HH-mm-ss")
    today = now.format("yyyyMMdd")
    tracedir = "pipeline_info"
}

singularity {
  enabled = true
  autoMounts = true
}

process {
    cpus = 2
    /*
    withName:check_inventories {
        container = 'library://marialitovchenko/noncoding_driver_pipeline/r_packages.sif:latest'
    }

    withName:create_input_mutation_files {
        container = 'library://marialitovchenko/noncoding_driver_pipeline/r_packages.sif:latest'
    }

    withName:create_input_genomic_regions_files {
        container = 'library://marialitovchenko/noncoding_driver_pipeline/r_packages.sif:latest'
    }*/

    withName:mutpanning {
        container = 'library://marialitovchenko/default/mutpanning_v2:latest'
    }
}

report {
    enabled = true
    file = "noncoding_driver_pipeline_report_${curr_time}.html"
    overwrite = false
}


timeline {
    enabled = true
    file = "noncoding_driver_pipeline_timeline_'${curr_time}'.html"
    overwrite = false
}