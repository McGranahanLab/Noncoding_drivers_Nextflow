params {
	target_genome_path = 'data/assets/reference_genome/hg19.fa'
    // optional, but required then filtering by local mutation rate is
    // requested (see bin_len below)
    target_genome_chr_len = 'data/assets/reference_genome/hg19.chrom.sizes.bed'
    chain = 'data/assets/reference_genome/hg38ToHg19.over.chain'

    mutpanning_java_memory='150G'
}

executor {
    name = 'lsf'
    queueSize = 5000
    submitRateLimit = '1000/1min'
}

process {
    containerOptions = '--bind /re_gecip/cancer_lung/:/re_gecip/cancer_lung/'
    clusterOptions = '-P re_gecip_cancer_lung'

    withName:check_inventories {
        container = params.r_container
        executor = 'local'
    }

    withName:filter_input_mutations {
        container = params.r_container
        queue = 'short'
        cpus = 4
        memory = { 24.GB * task.attempt }
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3
    }

    withName:'write_mutations.*' {
        container = params.r_container
        queue = 'short'
        cpus = 1
        memory = { 2.GB * task.attempt }
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 5
    }

    withName:filter_genomic_regions {
        container = params.r_container
        queue = 'short'
        cpus = 2
        memory = { 10.GB * task.attempt } 
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 3
    }

    withName:'write_regions.*' {
        container = params.r_container
        queue = 'short'
        cpus = 1
        memory = { 1.GB * task.attempt }
        errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
        maxRetries = 5
    }
}